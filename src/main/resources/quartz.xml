<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
			http://www.springframework.org/schema/aop 
			http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
			http://www.springframework.org/schema/mvc 
			http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
			http://www.springframework.org/schema/context 
			http://www.springframework.org/schema/context/spring-context-4.0.xsd
			http://www.springframework.org/schema/jee 
			http://www.springframework.org/schema/jee/spring-jee-4.0.xsd">
	<context:annotation-config />
  	<context:component-scan base-package="com.ttpai.quartz" />
	<!-- 属性文件读入 -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
          destroy-method="close">
        <property name="filters" value="${jdbc.druid.filters}"/>
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="maxWait" value="${jdbc.maxWait}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${jdbc.validationQuery}"/>
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}"/>
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}"/>
        <property name="testOnReturn" value="${jdbc.testOnReturn}"/>
    </bean>
    <bean id="wwwTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <tx:advice id="wwwTXAdvice" transaction-manager="wwwTransactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="select*" read-only="true" propagation="SUPPORTS"/>
            <tx:method name="find*" read-only="true" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="wwwTransactionPointcut" expression="execution(* com.ttpai.quartz.service..*.*(..))"/>
        <aop:advisor advice-ref="wwwTXAdvice" pointcut-ref="wwwTransactionPointcut"/>
    </aop:config> 
	<!--配置集群策略 -->
	<bean id="jobTask" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.ttpai.quartz.FirstScheduledJob"/>
		<property name="durability" value="true" />    
        <property name="requestsRecovery" value="true" />
	</bean>
	<bean id="jobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobTask"/>
		<property name="cronExpression" value="0/5 * * ? * *"/>
	</bean>
	<bean id="firstTask" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.ttpai.quartz.TestTask"/>
		<property name="durability" value="true" />    
        <property name="requestsRecovery" value="true" />
	</bean>
	<bean id="firstCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="firstTask"/>
		<property name="cronExpression" value="0/5 * * ? * *"/>
	</bean>
	<bean id="schedulerMan" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:quartz.properties" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
		<property name="triggers">
			<list>
				<ref bean="firstCronTrigger"/>
				<ref bean="jobCronTrigger"/>
			</list>
		</property>
		<property name="transactionManager" ref="wwwTransactionManager" />
		<!--必须的，QuartzScheduler 延时启动，应用启动完后 QuartzScheduler 再启动 -->  
        <property name="startupDelay" value="5" />  
        <!-- 设置自动启动 -->  
        <property name="autoStartup" value="true" />
		<!-- 当任务没有执行时会重启项目会修改定时表达式,任务运行时无法修改 -->
		<property name="overwriteExistingJobs" value="true" />
	</bean>
</beans>